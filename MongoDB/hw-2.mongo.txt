use mongoLearn

// Пошук всіх вчителів
db.teacher.find()

// Пошук всіх студентів
db.students.find()

// 1) Знайти всіх дітей в яких сердня оцінка 4.2
db.students.find({ "avgScore": 4.2 })

// 2) Знайди всіх дітей з 1 класу
db.students.find({"class": 1})

// 3) Знайти всіх дітей які вивчають фізику
db.students.find({"lessons": "physics"})

// 4) Знайти всіх дітей, батьки яких працюють в науці ( scientist )
db.students.find({"parents.profession": "scientist"})

// 5) Знайти дітей, в яких середня оцінка більша за 4
db.students.find({"avgScore": {$gt: 4}})

// 6) Знайти найкращого учня
db.students.aggregate([
    {
        $sort: { "avgScore": -1 }
    },
    {
        $limit: 1
    }
])

// 7) Знайти найгіршого учня
db.students.aggregate([
    {
        $sort: { "avgScore": 1 }
    },
    {
        $limit: 1
    }
])

// 8) Знайти топ 3 учнів
db.students.aggregate([
    {
        $sort: { "avgScore": -1 }
    },
    {
        $limit: 3
    }
])

// 9) Знайти середній бал по школі
db.students.aggregate([
    {
        $group: {
            _id: null,
            avgScoreSchool: { $avg: "$avgScore" }
        }
    }
])

// 10) Знайти середній бал дітей які вивчають математику або фізику
// Починаємо агрегаційний запит для колекції "students".
db.students.aggregate([
    {
        // Етап 1: $match. Фільтруємо документи, щоб обрати лише ті, які вивчають математику або фізику.
        $match: {
            lessons: { $in: ["mathematics", "physics"] }
        }
    },
    {
        // Етап 2: $group. Групуємо документи, створюючи одну групу з _id: null.
        $group: {
            _id: null,
            // Створюємо поле avgScoreMathPhysics та обчислюємо середній бал за допомогою $avg.
            avgScoreMathPhysics: { $avg: "$avgScore" }
        }
    }
])

// 11) Знайти середній бал по 2 класі
db.students.aggregate([
    {
        $match: {
            class: 2
        }
    },
    {
        $group: {
            _id: null,
            avgScoreClass2: { $avg: "$avgScore" }
        }
    }
])

// 12) Знайти дітей з не повною сім'єю
db.students.aggregate([
    {
        $match: {
            $or:[
                {parents: {$size:0}},
                {parents: {$size:1}}
            ]
        }
    }
])

// 13) Знайти батьків які не працюють
db.students.aggregate([
    {
        $unwind: "$parents"  // Розгортаємо масив батьків
    },
    {
        $match: {
            "parents.profession": { $exists: false }  // Вибираємо батьків, у яких немає професії
        }
    },
    {
        $group: {
            _id: null,
            parents: { $push: "$parents.name" }  // Збираємо імена батьків в масив
        }
    }
])

// 14) Вигнати дітей, які мають середній бал менше ніж 2.5
db.students.deleteMany({ "avgScore": { $lt: 2.5 } })

// 15) Дітям, батьки яких працюють в освіті ( teacher ) поставити 5
db.students.updateMany(
    {
        "parents.profession": "teacher"
    },
    {
        $set: { "avgScore": 5 }
    }
    )

// 16) Знайти дітей які вчаться в початковій школі (до 5 класу) і вивчають фізику ( physics )
db.students.find({
    "class": { $lte: 5 },
    "lessons": "physics"
})

// 17) Знайти найуспішніший клас
db.students.aggregate([
    {
        $group: {
            _id: "$class",
            avgScore: { $avg: "$avgScore" }
        }
    },
    {
        $sort: { avgScore: -1 }
    },
    {
        $limit: 1
    }
])
